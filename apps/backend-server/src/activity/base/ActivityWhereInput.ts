/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ExplorerWhereUniqueInput } from "../../explorer/base/ExplorerWhereUniqueInput";
import { HostWhereUniqueInput } from "../../host/base/HostWhereUniqueInput";
import { BookingListRelationFilter } from "../../booking/base/BookingListRelationFilter";

@InputType()
class ActivityWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  location?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ExplorerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExplorerWhereUniqueInput)
  @IsOptional()
  @Field(() => ExplorerWhereUniqueInput, {
    nullable: true,
  })
  explorer?: ExplorerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => HostWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HostWhereUniqueInput)
  @IsOptional()
  @Field(() => HostWhereUniqueInput, {
    nullable: true,
  })
  host?: HostWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => BookingListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BookingListRelationFilter)
  @IsOptional()
  @Field(() => BookingListRelationFilter, {
    nullable: true,
  })
  bookings?: BookingListRelationFilter;
}

export { ActivityWhereInput as ActivityWhereInput };
