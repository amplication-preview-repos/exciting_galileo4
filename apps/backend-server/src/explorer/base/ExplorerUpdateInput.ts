/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { AccommodationUpdateManyWithoutExplorersInput } from "./AccommodationUpdateManyWithoutExplorersInput";
import { Type } from "class-transformer";
import { ActivityUpdateManyWithoutExplorersInput } from "./ActivityUpdateManyWithoutExplorersInput";
import { CommissionUpdateManyWithoutExplorersInput } from "./CommissionUpdateManyWithoutExplorersInput";

@InputType()
class ExplorerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => AccommodationUpdateManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => AccommodationUpdateManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => AccommodationUpdateManyWithoutExplorersInput, {
    nullable: true,
  })
  accommodations?: AccommodationUpdateManyWithoutExplorersInput;

  @ApiProperty({
    required: false,
    type: () => ActivityUpdateManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => ActivityUpdateManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => ActivityUpdateManyWithoutExplorersInput, {
    nullable: true,
  })
  activities?: ActivityUpdateManyWithoutExplorersInput;

  @ApiProperty({
    required: false,
    type: () => CommissionUpdateManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => CommissionUpdateManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => CommissionUpdateManyWithoutExplorersInput, {
    nullable: true,
  })
  commissions?: CommissionUpdateManyWithoutExplorersInput;
}

export { ExplorerUpdateInput as ExplorerUpdateInput };
