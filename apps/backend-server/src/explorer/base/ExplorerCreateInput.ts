/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  MaxLength,
  ValidateNested,
} from "class-validator";
import { AccommodationCreateNestedManyWithoutExplorersInput } from "./AccommodationCreateNestedManyWithoutExplorersInput";
import { Type } from "class-transformer";
import { ActivityCreateNestedManyWithoutExplorersInput } from "./ActivityCreateNestedManyWithoutExplorersInput";
import { CommissionCreateNestedManyWithoutExplorersInput } from "./CommissionCreateNestedManyWithoutExplorersInput";

@InputType()
class ExplorerCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => AccommodationCreateNestedManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => AccommodationCreateNestedManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => AccommodationCreateNestedManyWithoutExplorersInput, {
    nullable: true,
  })
  accommodations?: AccommodationCreateNestedManyWithoutExplorersInput;

  @ApiProperty({
    required: false,
    type: () => ActivityCreateNestedManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => ActivityCreateNestedManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => ActivityCreateNestedManyWithoutExplorersInput, {
    nullable: true,
  })
  activities?: ActivityCreateNestedManyWithoutExplorersInput;

  @ApiProperty({
    required: false,
    type: () => CommissionCreateNestedManyWithoutExplorersInput,
  })
  @ValidateNested()
  @Type(() => CommissionCreateNestedManyWithoutExplorersInput)
  @IsOptional()
  @Field(() => CommissionCreateNestedManyWithoutExplorersInput, {
    nullable: true,
  })
  commissions?: CommissionCreateNestedManyWithoutExplorersInput;
}

export { ExplorerCreateInput as ExplorerCreateInput };
