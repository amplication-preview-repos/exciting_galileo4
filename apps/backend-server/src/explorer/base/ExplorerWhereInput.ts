/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { AccommodationListRelationFilter } from "../../accommodation/base/AccommodationListRelationFilter";
import { ActivityListRelationFilter } from "../../activity/base/ActivityListRelationFilter";
import { CommissionListRelationFilter } from "../../commission/base/CommissionListRelationFilter";

@InputType()
class ExplorerWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  password?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => AccommodationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccommodationListRelationFilter)
  @IsOptional()
  @Field(() => AccommodationListRelationFilter, {
    nullable: true,
  })
  accommodations?: AccommodationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ActivityListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ActivityListRelationFilter)
  @IsOptional()
  @Field(() => ActivityListRelationFilter, {
    nullable: true,
  })
  activities?: ActivityListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CommissionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CommissionListRelationFilter)
  @IsOptional()
  @Field(() => CommissionListRelationFilter, {
    nullable: true,
  })
  commissions?: CommissionListRelationFilter;
}

export { ExplorerWhereInput as ExplorerWhereInput };
